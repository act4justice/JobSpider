<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.test.app.persistence.MemberDAO">
   
    <!-- 회원탈퇴 -->
    <delete id="per_secede" parameterType="String">
       delete from b1_personal where per_id= #{loginId}
    </delete>
    <delete id="com_secede" parameterType="String">
       delete from b1_company where com_id= #{loginId}
    </delete>

    <!-- 아이디/관심기업 테이블에서 관심기업 찾아오기 -->
    <select id="selectInterestcom" parameterType="String" resultType="String">
       select per_interestcom from b1_interestcom where per_id = #{per_id} order by per_interestcom
    </select>
    
    <!-- 관심기업 삭제하기 -->
    <delete id="deleteInterestCom" parameterType="map">
       delete from b1_interestCom where per_id = #{per_id} and per_interestCom = #{per_interestCom}
    </delete>
    
    <!-- 아이디/관심기업 테이블에 넣기 -->
    <insert id="insertInterestcom" parameterType="map">
       insert into b1_interestcom values(#{per_interestcom},#{per_id})
    </insert>
    
     <!-- 자신의 관심기업목록 가져오기 -->
    <select id="getInterestRec" parameterType="String" resultType="int">
       select rec_index from b1_interestrecruiting where per_id = #{loginId}
    </select>
   
    <!-- 뉴스피드 등록 -->
    <insert id="insertNewsfeed">
       <if test="nf_subtitle==null">
       insert into b1_newsfeed (nf_url, nf_title, nf_date, nf_content, inputdate, per_interestcom) values (#{nf_url},#{nf_title},#{nf_date},#{nf_content},sysdate,#{per_interestcom})
       </if>
       <if test="nf_subtitle!=null">
       insert into b1_newsfeed values(#{nf_url},#{nf_title},#{nf_subtitle}, #{nf_date},#{nf_content},sysdate,#{per_interestcom})
       </if>
       
    </insert>
    
    <!-- 뉴스피드 가져오기 -->
    <select id="selectNewsfeed" parameterType="string" resultType="Newsfeed">
       select nf_url, nf_title, nf_subtitle, nf_date, nf_content, per_interestcom from b1_newsfeed where per_interestcom = #{per_interestcom} order by inputdate desc
    </select>
    
    <!-- url존재여부 판단을 위해 urlList가져오기 -->
    <select id="duplicateUrlCount" parameterType="string" resultType="int">
       select count(nf_url) from b1_newsfeed where nf_url=#{nf_url}
    </select>
    
    <!-- newsfeed하나 가져오기 -->
    <select id="selectOneNewsfeed" parameterType="String" resultType="Newsfeed">
       select * from b1_newsfeed where nf_url like #{url}
    </select>
    
    <!-- 스크랩 등록 -->
    <insert id="insertScrap" parameterType="map">
       <if test="nf_subtitle==null">
       insert into b1_scrap (scr_seq, per_id, scr_title, scr_date, scr_content) values(scrap_seq.nextval, #{per_id}, #{nf_title}, #{nf_date},#{nf_content})
       </if>
       <if test="nf_subtitle!=null">
       insert into b1_scrap (scr_seq, per_id, scr_title, scr_subtitle, scr_date, scr_content) values(scrap_seq.nextval, #{per_id}, #{nf_title}, #{nf_subtitle}, #{nf_date},#{nf_content})
       </if>
    </insert>
    
    <!-- 등록된 스크랩인지 검사 -->
    <select id="checkScrap" parameterType="map" resultType="String">
       select scr_title from b1_scrap where scr_title = #{nf_title} and per_id = #{per_id}
    </select>
    
    <!-- 스크랩북-스크랩들 가져오기 -->
    <select id="selectScrapList" parameterType="String" resultType="Scrap">
       select * from b1_scrap where per_id = #{per_id}
    </select>
    
    <!-- 스크랩하나 가져오기 -->
    <select id="selectOneScrap" parameterType="String" resultType="Scrap">
       select * from b1_scrap where scr_seq = #{scr_seq}
    </select>
   
    
    <!-- dartcode가져오기 -->
    <select id="selectDartCode" parameterType="String" resultType="String">
       select dartcode from b1_comnamelist where comname=#{comname}
    </select>
 </mapper>